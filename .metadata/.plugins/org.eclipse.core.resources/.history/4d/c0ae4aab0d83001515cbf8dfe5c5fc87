package com.polaris.rpghelpers;

import com.badlogic.gdx.InputProcessor;
import com.polaris.gameobjects.Character;
import com.polaris.gameobjects.LandscapeObject;
import com.badlogic.gdx.Input.Keys;
import com.polaris.gameworld.GameRenderer;

public class InputHandler implements InputProcessor {

	private Character myCharacter;
	
	public InputHandler(Character character) {
		myCharacter = character;
	}

	@Override
	public boolean keyDown(int keycode) {
		if(keycode == Keys.Q) {
			myCharacter.buildWall();
		}
		return false;
	}

	@Override
	public boolean keyUp(int keycode) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean keyTyped(char character) {
		return false;
	}

	@Override
	public boolean touchDown(int screenX, int screenY, int pointer, int button) {
		//screenY was a little awkward, adjusted for click/character placement
		//myCharacter.setDest(screenX - (168/2), screenY - (168/2));
		myCharacter.setDest(screenX,  screenY);
		
		for (int i = 0; i < GameRenderer.myWorld.numObjects(); i++) {
			LandscapeObject curObject = GameRenderer.myWorld.getObject(i);
			int trueX = myCharacter.getX() - 366 + screenX;
			int trueY = myCharacter.getY() - 366 + screenY;
			if (curObject.checkClick(trueX,  trueY)) {
				if (curObject.getReturnObject() != null) {
					myCharacter.addInventory(curObject.getReturnObject());
				}
				curObject.onClick();
			}
		}
		return true;
	}

	@Override
	public boolean touchUp(int screenX, int screenY, int pointer, int button) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean touchDragged(int screenX, int screenY, int pointer) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean mouseMoved(int screenX, int screenY) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean scrolled(int amount) {
		// TODO Auto-generated method stub
		return false;
	}
}
